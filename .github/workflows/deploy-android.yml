name: Deploy App to Androud
'on':
  workflow_dispatch: null
jobs:
  build:
    name: Job 1 - Build Signed AAB
    runs-on: ubuntu-latest
    steps:
      # Step 1 - checkout the repository, making it available to the workflow:
      - uses: actions/checkout@v3
      - name: Setup JDK 20
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 20
      # Step 4 - Setup Gradle to allow workflow access and execute Gradlew file
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      # Step 5 - Setup Gradle Cache to improve the speed of the workflows
      - name: Setup Gradle Cache
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
      # Step 6 - Override the version code and version name
      - name: Bump Version Code
        uses: chkfung/android-version-actions@v1.2.1
        with:
          gradlePath: app/build.gradle.kts
          versionCode: '${{ github.run_number }}'
          versionName: 1.0.0
      # Step 7 - Build Production App Bundle
      - name: Build prodRelease
        run: ./gradlew bundleRelease
      # Step 8 - Sign AAB
      - name: Sign AAb
        id: sign
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: '${{ secrets.ANDROID_KEYSTORE }}'
          alias: '${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}'
          keyStorePassword: '${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}'
          keyPassword: '${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}'
      # Step 9 - Save AAB after Build job is complete to publish it as a Github release in the next job
      - name: Upload app bundle as artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-bundle
          path: app/build/outputs/bundle/release/app-release.aab
      # Step 10 - Print out the Job Status
      - run: 'echo Build status report=${{ job.status }}'
  deploy:
    name: Job_2 - Deploy aab to playstore
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Step 1 -  Download app bundle
      - name: Download app bundle from artifact
        uses: actions/download-artifact@v2
        with:
          name: app-bundle
      # Step 2- Upload the AAB to play console
      - name: Publish to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: '${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}'
          packageName: com.uxstate.countriespad
          releaseFiles: '${{ github.workspace }}/app-release.aab'
          track: production